/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Thu Aug 01 13:28:54 2019. */

#ifndef PB_LEUVILLE_MESSAGE_PB_H_INCLUDED
#define PB_LEUVILLE_MESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _leuville_Type {
    leuville_Type_PING = 0,
    leuville_Type_BUTTON = 1
} leuville_Type;
#define _leuville_Type_MIN leuville_Type_PING
#define _leuville_Type_MAX leuville_Type_BUTTON
#define _leuville_Type_ARRAYSIZE ((leuville_Type)(leuville_Type_BUTTON+1))

/* Struct definitions */
typedef struct _leuville_Downlink {
    uint16_t pingDelay;
/* @@protoc_insertion_point(struct:leuville_Downlink) */
} leuville_Downlink;

typedef struct _leuville_Uplink {
    leuville_Type type;
    uint8_t battery;
/* @@protoc_insertion_point(struct:leuville_Uplink) */
} leuville_Uplink;

/* Default values for struct fields */

/* Initializer values for message structs */
#define leuville_Uplink_init_default             {_leuville_Type_MIN, 0}
#define leuville_Downlink_init_default           {0}
#define leuville_Uplink_init_zero                {_leuville_Type_MIN, 0}
#define leuville_Downlink_init_zero              {0}

/* Field tags (for use in manual encoding/decoding) */
#define leuville_Downlink_pingDelay_tag          1
#define leuville_Uplink_type_tag                 1
#define leuville_Uplink_battery_tag              2

/* Struct field encoding specification for nanopb */
extern const pb_field_t leuville_Uplink_fields[3];
extern const pb_field_t leuville_Downlink_fields[2];

/* Maximum encoded size of messages (where known) */
#define leuville_Uplink_size                     8
#define leuville_Downlink_size                   6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
